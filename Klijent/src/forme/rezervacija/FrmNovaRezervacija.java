/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme.rezervacija;

import domen.Putnik;
import domen.Putovanje;
import domen.Rezervacija;
import domen.TuristickiAgent;
import forme.putnik.FrmNoviPutnik;
import forme.putovanje.FrmNovoPutovanje;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.Komunikacija;
import modeli.ModelTabeleRezervacija;

/**
 *
 * @author Korisnik
 */
public class FrmNovaRezervacija extends javax.swing.JDialog {
    
    private Rezervacija rezervacija;
    private java.awt.Frame parent;
    private TuristickiAgent ulogovan;

    /**
     * Creates new form FrmNovaRezervacija
     */
    public FrmNovaRezervacija(java.awt.Frame parent, boolean modal, TuristickiAgent ta) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.parent = parent;
        this.ulogovan = ta;
        prepareView();
    }

    public void setRezervaciju(Rezervacija r){
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        this.rezervacija = r;
        
//        Putovanje selectedObject = r.getPutovanje();
//        System.out.println("Selected Object: " + selectedObject.toString());
//        cbPutovanje.setSelectedItem(selectedObject);
//        System.out.println("Selected Object: " + selectedObject.toString());
//        txtPutnik.setText(r.getPutnik().getBrojPasosa());
//        txtPutnik.setEditable(false);
        
        System.out.println("id" + r.getPutnik().getId());
        System.out.println("id" + r.getPutovanje().getId());
//        //Putovanje
        System.out.println("pre putovanje" + r.getPutovanje());
//        
        Putovanje putovanje = r.getPutovanje();
        try {
            putovanje = Komunikacija.getInstance().ucitajPutovanje(putovanje);
               cbPutovanje.setSelectedItem(r.getPutovanje());
        System.out.println("posle putovanja " + r.getPutovanje());
        } catch (Exception ex) {
            Logger.getLogger(FrmNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
        
//        cbPutovanje.setSelectedItem(r.getPutovanje());
        System.out.println("posle putovanja " + r.getPutovanje());
        
        Putnik putnik = r.getPutnik();
        try {
            putnik = Komunikacija.getInstance().ucitajPutnika(putnik);
            txtPutnik.setText(putnik.getBrojPasosa());
            txtPutnik.setEditable(false);
//            cbPutnik.setSelectedItem(putnik.toString());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "GRESKA KOD SETOVANJA REZ PUTNIK");
            Logger.getLogger(FrmNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtPutnik.setText(putnik.getBrojPasosa());
        cbPutnik.setSelectedItem(r.getPutnik());

        txtDatumRezervacije.setText(sdf.format(r.getDatumRezervacije()));
        
        if(r.getStatus().equals("Nije potvrdjena")){
            jbNijePotvrdjena.setSelected(true);
            jbPotvrdjena.setSelected(false);
        }else{
            jbPotvrdjena.setSelected(true);
            jbNijePotvrdjena.setSelected(false);
        }
            
        txtNapomena.setText(r.getNapomena());
//        txtPutnik.setEditable(false);
        cbPutnik.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRezervacije = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        cbPutovanje = new javax.swing.JComboBox<>();
        cbPutnik = new javax.swing.JComboBox<>();
        txtDatumRezervacije = new javax.swing.JTextField();
        jbNijePotvrdjena = new javax.swing.JRadioButton();
        jbPotvrdjena = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNapomena = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnDodajPutovanje = new javax.swing.JButton();
        btnDodajPutnika = new javax.swing.JButton();
        txtPutnik = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Kreiraj rezervaciju", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel6.setText("Rezervacije:");

        tblRezervacije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblRezervacije);

        cbPutovanje.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbPutnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPutnikActionPerformed(evt);
            }
        });

        jbNijePotvrdjena.setText("Nije potvrdjena");
        jbNijePotvrdjena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNijePotvrdjenaActionPerformed(evt);
            }
        });

        jbPotvrdjena.setText("Potvrdjena");
        jbPotvrdjena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPotvrdjenaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setText("Putovanje:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setText("Putnik:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel3.setText("Datum rezervacije:");

        txtNapomena.setColumns(20);
        txtNapomena.setRows(5);
        jScrollPane1.setViewportView(txtNapomena);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel4.setText("Status:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel5.setText("Napomena:");

        btnDodajPutovanje.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnDodajPutovanje.setText("Dodaj putovanje");
        btnDodajPutovanje.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnDodajPutovanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajPutovanjeActionPerformed(evt);
            }
        });

        btnDodajPutnika.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnDodajPutnika.setText("Dodaj putnika");
        btnDodajPutnika.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnDodajPutnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajPutnikaActionPerformed(evt);
            }
        });

        txtPutnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPutnikActionPerformed(evt);
            }
        });

        btnSacuvaj.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnSacuvaj.setText("Sacuvaj rezervaciju");
        btnSacuvaj.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(67, 67, 67)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbPutovanje, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)
                                        .addComponent(btnDodajPutovanje, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtPutnik, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDodajPutnika, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDatumRezervacije, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jbNijePotvrdjena)
                                        .addGap(43, 43, 43)
                                        .addComponent(jbPotvrdjena))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbPutnik, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbPutovanje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDodajPutovanje))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPutnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDodajPutnika))
                .addGap(18, 18, 18)
                .addComponent(cbPutnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatumRezervacije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jbNijePotvrdjena)
                    .addComponent(jbPotvrdjena))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajPutovanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajPutovanjeActionPerformed
        FrmNovoPutovanje fnp = new FrmNovoPutovanje(this.parent, true);
        fnp.setVisible(true);
        //popuniCbPutovanje();
    }//GEN-LAST:event_btnDodajPutovanjeActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        try {
        if(this.rezervacija == null){
            this.rezervacija = new Rezervacija();
            this.rezervacija.setPutnik((Putnik) cbPutnik.getSelectedItem());
        }
        
        if(!validacija()){
            return;
        }
        
        this.rezervacija.setPutovanje((Putovanje) cbPutovanje.getSelectedItem());
        
//        }
        //this.rezervacija.setPutnik((Putnik) cbPutnik.getSelectedItem());
        
        this.rezervacija.setDatumRezervacije(sdf.parse(txtDatumRezervacije.getText()));
        
        if(jbNijePotvrdjena.isSelected()){
            this.rezervacija.setStatus("Nije potvrdjena");
        }else{
            this.rezervacija.setStatus("Potvrdjena");
        }
        this.rezervacija.setNapomena(txtNapomena.getText());
        this.rezervacija.setTuristickiAgent(ulogovan);
        
            System.out.println("id pre" + this.rezervacija.getId());
       
        
        Komunikacija.getInstance().zapamtiRezervaciju(this.rezervacija);
        
        popuniTabelu();
        
        System.out.println("id posle" + this.rezervacija.getId());
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio rezervaciju.");
        
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti rezervaciju.");
            Logger.getLogger(FrmNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void jbNijePotvrdjenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNijePotvrdjenaActionPerformed
       if (jbNijePotvrdjena.isSelected()){
           jbNijePotvrdjena.setSelected(true);
           jbPotvrdjena.setSelected(false);
       }
    }//GEN-LAST:event_jbNijePotvrdjenaActionPerformed

    private void jbPotvrdjenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPotvrdjenaActionPerformed
        if(jbPotvrdjena.isSelected()){
            jbPotvrdjena.setSelected(true);
            jbNijePotvrdjena.setSelected(false);
        }
    }//GEN-LAST:event_jbPotvrdjenaActionPerformed

    private void txtPutnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPutnikActionPerformed
        try {
            
            if(txtPutnik.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Morate da popunite putnika");
                return;
            }
            
            Putnik putnik = new Putnik();
            putnik.setBrojPasosa(txtPutnik.getText());
            putnik.setJMBG(txtPutnik.getText());
            
            ArrayList<Putnik> lista = Komunikacija.getInstance().ucitajListuPutnika(putnik);
            cbPutnik.setEnabled(true);
            
            if(lista.isEmpty()){
                JOptionPane.showMessageDialog(this, "Sistem nije pronasao putnike po zadatoj vrednosti");
            }
            
            cbPutnik.removeAllItems();
            
            for(Putnik p : lista){
                cbPutnik.addItem(p);
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem nije pronasao putnike po zadatoj vrednosti");
            Logger.getLogger(FrmNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
    }//GEN-LAST:event_txtPutnikActionPerformed

    private void cbPutnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPutnikActionPerformed
       Putnik p = (Putnik) cbPutnik.getSelectedItem();
       
       txtPutnik.setText(p.getBrojPasosa());
       
    }//GEN-LAST:event_cbPutnikActionPerformed

    private void btnDodajPutnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajPutnikaActionPerformed
        FrmNoviPutnik  fnp = new FrmNoviPutnik(this.parent, true);
        fnp.setVisible(true);
    }//GEN-LAST:event_btnDodajPutnikaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajPutnika;
    private javax.swing.JButton btnDodajPutovanje;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<Object> cbPutnik;
    private javax.swing.JComboBox<Object> cbPutovanje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton jbNijePotvrdjena;
    private javax.swing.JRadioButton jbPotvrdjena;
    private javax.swing.JTable tblRezervacije;
    private javax.swing.JTextField txtDatumRezervacije;
    private javax.swing.JTextArea txtNapomena;
    private javax.swing.JTextField txtPutnik;
    // End of variables declaration//GEN-END:variables

    private void popuniCbPutovanje() {
        try {
            ArrayList<Putovanje> putovanja = Komunikacija.getInstance().ucitajListuPutovanja();
            cbPutovanje.removeAllItems();
            
            for(Putovanje p : putovanja){
                cbPutovanje.addItem(p);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniTabelu() {
        ModelTabeleRezervacija model = new ModelTabeleRezervacija();
        try {
            ArrayList<Rezervacija> lista = Komunikacija.getInstance().ucitajListuRezervacija();
            
            if(lista.isEmpty()){
                tblRezervacije.setModel(new ModelTabeleRezervacija());
            }
            //model.setPutnici(lista);
            tblRezervacije.setModel(new ModelTabeleRezervacija(lista));
        } catch (Exception ex) {
            Logger.getLogger(FrmNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean validacija() {
        
        if(rezervacija == null){
        
            if(txtDatumRezervacije.getText().isEmpty() || txtNapomena.getText().isEmpty() || txtPutnik.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Morate da popunite sva polja");
                return false;
            }
            return true;
        }else{
            if(txtDatumRezervacije.getText().isEmpty() || txtNapomena.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Morate da popunite sva polja");
                return false;
            }
            return true;
        }
        
    }

//    private void popuniCbPutnik() {
//        try {
//            ArrayList<Putovanje> putovanja = Komunikacija.getInstance().ucitajListuPutovanja();
//            cbPutovanje.removeAllItems();
//            
//            for(Putovanje p : putovanja){
//                cbPutovanje.addItem(p);
//            }
//        } catch (Exception ex) {
//            Logger.getLogger(FrmNovaRezervacija.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    private void prepareView() {
        popuniCbPutovanje();
        popuniTabelu();
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        cbPutnik.setEnabled(false);
        jbNijePotvrdjena.setSelected(true);
        jbPotvrdjena.setSelected(false);
        txtDatumRezervacije.setText(sdf.format(new Date()));
    }
}
