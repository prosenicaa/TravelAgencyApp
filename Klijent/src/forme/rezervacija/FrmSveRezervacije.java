/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme.rezervacija;

import domen.Rezervacija;
import domen.TuristickiAgent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.Komunikacija;
import modeli.ModelTabeleRezervacija;

/**
 *
 * @author Korisnik
 */
public class FrmSveRezervacije extends javax.swing.JDialog {

    private java.awt.Frame parent;
    private TuristickiAgent ulogovan;
    
    /**
     * Creates new form FrmSveRezervacije
     */
    public FrmSveRezervacije(java.awt.Frame parent, boolean modal, TuristickiAgent ta) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.parent = parent;
        this.ulogovan = ta;
        popuniTabelu();
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRezervacije = new javax.swing.JTable();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sve rezervacije", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setText("Pretraga:");

        txtPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPretragaActionPerformed(evt);
            }
        });

        tblRezervacije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRezervacije);

        btnIzmeni.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnIzmeni.setText("Izmeni");
        btnIzmeni.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 199, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPretragaActionPerformed
        try {
            Rezervacija r = new Rezervacija();
            
            if(txtPretraga.getText().isEmpty()){
                popuniTabelu();
                return;
            }
            r.setStatus(txtPretraga.getText());
            
            ArrayList<Rezervacija> lista = Komunikacija.getInstance().ucitajListuRezervacija(r);
            ModelTabeleRezervacija model = new ModelTabeleRezervacija();
            model.setRezervaciju(lista);
            tblRezervacije.setModel(model);
            
            //prepareView();
            
            if(model.getRowCount() == 0){
                JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje rezervacije po zadatoj vrednosti");
            }else{
                JOptionPane.showMessageDialog(this, "Sistem je nasao rezervacije po zadatoj vrednosti");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje rezervacije po zadatoj vrednosti");
            Logger.getLogger(FrmSveRezervacije.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_txtPretragaActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        ModelTabeleRezervacija model = (ModelTabeleRezervacija) tblRezervacije.getModel();
        int i = tblRezervacije.getSelectedRow();
        
        if(i >= 0) {
            Rezervacija r = model.vratiRezervaciju(i);
            
            try {
                r = Komunikacija.getInstance().ucitajRezervaciju(r);
                JOptionPane.showMessageDialog(this, "Sistem je ucitao rezervaciju");
                System.out.println("rez" + r.getBrojRezervacije());
                FrmNovaRezervacija fnr = new FrmNovaRezervacija(this.parent, true, ulogovan);
                fnr.setRezervaciju(r);
                fnr.setVisible(true);
                
                prepareView();
                popuniTabelu();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita rezervaciju");
                Logger.getLogger(FrmSveRezervacije.class.getName()).log(Level.SEVERE, null, ex);
            }}else{
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita rezervaciju");
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRezervacije;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        ModelTabeleRezervacija model = new ModelTabeleRezervacija();
        try {
            ArrayList<Rezervacija> lista = Komunikacija.getInstance().ucitajListuRezervacija();
            
            if(lista.isEmpty()){
                tblRezervacije.setModel(new ModelTabeleRezervacija());
            }
            //model.setPutnici(lista);
            tblRezervacije.setModel(new ModelTabeleRezervacija(lista));
        } catch (Exception ex) {
            Logger.getLogger(FrmSveRezervacije.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void prepareView() {
        ModelTabeleRezervacija model = (ModelTabeleRezervacija) tblRezervacije.getModel();
        boolean isEmpty = model.getRowCount() == 0;
        btnIzmeni.setEnabled(!isEmpty);
    }
}
